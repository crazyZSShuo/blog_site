# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2019-04-16 07:33
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_nick_name', models.CharField(max_length=24, unique=True, verbose_name='昵称')),
                ('user_gender', models.CharField(choices=[('m', '男'), ('f', '女'), ('o', '保密')], default='o', max_length=10, verbose_name='性别')),
                ('user_birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('user_mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='电话号码')),
                ('user_address', models.CharField(blank=True, max_length=200, null=True, verbose_name='地址')),
                ('user_image', models.ImageField(default='image/user/default.png', upload_to='image/user/%Y/%m', verbose_name='用户头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Acimage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_title', models.CharField(max_length=20, unique=True, verbose_name='图片标题')),
                ('image_detail', models.CharField(blank=True, max_length=200, null=True, verbose_name='图片简介')),
                ('image_path', models.ImageField(default='upload/default.png', upload_to='upload/%Y/%m', verbose_name='图片')),
            ],
            options={
                'verbose_name': '网站相册',
                'verbose_name_plural': '网站相册',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_title', models.CharField(max_length=50, unique=True, verbose_name='文章标题')),
                ('article_synopsis', models.TextField(blank=True, null=True, verbose_name='简介')),
                ('article_image', models.ImageField(default='image/article/default.png', upload_to='image/article/%Y/%m', verbose_name='文章配图')),
                ('article_content', models.TextField(blank=True, null=True, verbose_name='文章内容')),
                ('article_tag', models.CharField(blank=True, max_length=50, null=True, verbose_name='文章标签')),
                ('article_type', models.CharField(choices=[('0', '草稿'), ('1', '软删除'), ('2', '正常')], default='2', max_length=10, verbose_name='文章类别')),
                ('article_original', models.CharField(choices=[('0', '转载'), ('1', '原创')], default='0', max_length=10, verbose_name='是否原创')),
                ('article_click', models.IntegerField(default=0, verbose_name='文章点击率')),
                ('article_up', models.CharField(choices=[('1', '置顶'), ('0', '取消置顶')], default='0', max_length=10, verbose_name='文章置顶')),
                ('article_support', models.CharField(choices=[('1', '推荐'), ('0', '取消推荐')], default='0', max_length=10, verbose_name='文章推荐')),
                ('article_create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
                'ordering': ['-article_create_time'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='分类名称')),
                ('category_detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='分类介绍')),
                ('category_icon', models.CharField(blank=True, max_length=100, null=True, verbose_name='分类图标')),
                ('category_sort_id', models.IntegerField(default=1, verbose_name='分类排序')),
            ],
            options={
                'verbose_name': '博客分类',
                'verbose_name_plural': '博客分类',
            },
        ),
        migrations.CreateModel(
            name='Siteinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='站点名称')),
                ('site_detail', models.CharField(default='', max_length=100, verbose_name='站点介绍')),
                ('site_logo', models.ImageField(default='image/site/default.png', upload_to='image/site/', verbose_name='站点logo')),
                ('site_topimage', models.ImageField(default='image/site/topbg.jpg', upload_to='image/site/', verbose_name='顶部大图')),
                ('site_powered', models.TextField(default='', verbose_name='Powered By')),
                ('site_links', models.TextField(default='', verbose_name='Links')),
                ('site_contact', models.TextField(default='', verbose_name='Contact Me')),
                ('site_footer', models.TextField(default='', verbose_name='站点底部代码')),
                ('site_changyan', models.TextField(default='', verbose_name='文章底部广告代码')),
                ('site_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='管理员')),
            ],
            options={
                'verbose_name': '网站信息',
                'verbose_name_plural': '网站信息',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='article_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Category', verbose_name='所属分类'),
        ),
        migrations.AddField(
            model_name='article',
            name='article_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='文章作者'),
        ),
    ]
